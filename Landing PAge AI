<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>VerdeAI - The Eco-Friendly AI Toolkit</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
  <style>
    * { box-sizing: border-box; margin: 0; padding: 0; }
    body { font-family: 'Inter', sans-serif; background: #f4f9f4; color: #2f3e2f; line-height: 1.6; }
    header { background-color: #d1e7d1; padding: 4rem 2rem; text-align: center; }
    header h1 { font-size: 2.5rem; margin-bottom: 1rem; }
    header p { font-size: 1.2rem; margin-bottom: 2rem; }
    header .cta { background: #4caf50; color: white; padding: 0.75rem 2rem; font-weight: bold; border: none; border-radius: 8px; cursor: pointer; text-decoration: none; }

    section { padding: 3rem 2rem; max-width: 900px; margin: auto; }
    section h2 { font-size: 2rem; margin-bottom: 1rem; color: #3a5f3a; }
    .features div, .how-it-works div, .pricing div { margin-bottom: 1.5rem; }

    .testimonials blockquote { font-style: italic; margin-bottom: 1rem; }
    .email-signup input { padding: 0.5rem; border: 1px solid #ccc; border-radius: 4px; margin-right: 0.5rem; }
    .email-signup button { background: #4caf50; color: white; border: none; padding: 0.6rem 1.5rem; border-radius: 4px; cursor: pointer; }

    footer { text-align: center; padding: 2rem; background: #e6f2e6; font-size: 0.9rem; }
    footer a { margin: 0 0.5rem; color: #2f3e2f; text-decoration: none; }

    .chatbox {
      max-width: 900px;
      margin: 3rem auto;
      padding: 2rem;
      background: #ffffff;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
    }
    .chatbox h2 { color: #3a5f3a; margin-bottom: 1rem; }
    .chat-log { max-height: 300px; overflow-y: auto; border: 1px solid #ccc; padding: 1rem; margin-bottom: 1rem; background: #f9f9f9; border-radius: 6px; }
    .chat-entry { margin-bottom: 1rem; }
    .chat-entry.user { font-weight: bold; }
    .chat-entry.ai { color: #3a5f3a; }
    .chatbox form { display: flex; gap: 1rem; }
    .chatbox input[type="text"] { flex: 1; padding: 0.6rem; border: 1px solid #ccc; border-radius: 6px; }
    .chatbox button { padding: 0.6rem 1.2rem; background: #4caf50; color: white; border: none; border-radius: 6px; cursor: pointer; }
  </style>
</head>
<body>
  <header>
    <h1>üåç Meet VerdeAI: The First AI That Cares About the Planet</h1>
    <p>Eco-friendly AI chat, research, and browsing to reduce your digital carbon footprint.</p>
    <a href="#" class="cta">üå± Try VerdeAI Free</a>
  </header>

  <section class="features">
    <h2>ü§ñ Product Features</h2>
    <div><strong>üå≥ Eco-Friendly Chatbot:</strong> Energy tracking, low-energy suggestions, and offset integration.</div>
    <div><strong>üìä Impact Dashboard:</strong> View and reduce your AI usage over time with badges and tips.</div>
    <div><strong>üíª Lightweight Browser:</strong> Privacy-first browsing with energy-saving features (coming soon).</div>
  </section>

  <section class="how-it-works">
    <h2>‚è≥ How It Works</h2>
    <div><strong>1. Prompt:</strong> Ask VerdeAI anything, just like ChatGPT.</div>
    <div><strong>2. Track:</strong> Learn the environmental impact of each interaction.</div>
    <div><strong>3. Offset:</strong> Automatically contribute to reforestation and renewables.</div>
  </section>

  <section class="testimonials">
    <h2>üí¨ What People Are Saying</h2>
    <blockquote>‚ÄúFinally, an AI tool that matches my values.‚Äù - Alex T.</blockquote>
    <blockquote>‚ÄúThis is the Ecosia of AI. I‚Äôm all in.‚Äù - Rohan G.</blockquote>
    <blockquote>‚ÄúThe carbon dashboard changed how I use tech.‚Äù - Maya L.</blockquote>
  </section>

  <section class="pricing">
    <h2>üí∏ Pricing</h2>
    <div><strong>Free Plan:</strong> 30 prompts/day, carbon tracking, EcoTips access.</div>
    <div><strong>Premium ($9/mo):</strong> Unlimited access, auto carbon offsetting, team dashboards.</div>
    <a href="#" class="cta">üåç Subscribe & Offset Now</a>
  </section>

  <section class="email-signup">
    <h2>üì® Stay in the Loop</h2>
    <p>Join the waitlist for early access and sustainability updates.</p>
    <input type="email" placeholder="Your email address">
    <button>Join the Movement</button>
  </section>

  <section class="chatbox">
    <h2>üß† Ask VerdeAI</h2>
    <div class="chat-log" id="chat-log">
      <div class="chat-entry ai">Hello! I'm VerdeAI. Ask me anything about AI and sustainability üå±</div>
    </div>
    <form id="chat-form">
      <input type="text" id="user-input" placeholder="Type your question here..." required>
      <button type="submit">Send</button>
    </form>
  </section>

  <footer>
    <p>¬© 2025 VerdeAI ‚Äî Prompt smarter. Live greener.</p>
    <p><a href="#">About Us</a> | <a href="#">Blog</a> | <a href="#">Carbon Scoreboard</a> | <a href="#">Contact</a></p>
  </footer>

  <script>
    const form = document.getElementById('chat-form');
    const input = document.getElementById('user-input');
    const chatLog = document.getElementById('chat-log');

    async function getHuggingFaceResponse(prompt) {
      const response = await fetch("https://api-inference.huggingface.co/models/google/flan-t5-small", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "Authorization": "Bearer YOUR_HUGGINGFACE_API_KEY"
        },
        body: JSON.stringify({ inputs: prompt })
      });

      const result = await response.json();
      return result[0]?.generated_text || "Sorry, I couldn‚Äôt generate a response.";
    }

    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      const userInput = input.value.trim();
      if (!userInput) return;

      const userEntry = document.createElement('div');
      userEntry.className = 'chat-entry user';
      userEntry.textContent = `You: ${userInput}`;
      chatLog.appendChild(userEntry);

      const loadingEntry = document.createElement('div');
      loadingEntry.className = 'chat-entry ai';
      loadingEntry.textContent = `VerdeAI: Thinking...`;
      chatLog.appendChild(loadingEntry);

      input.value = '';
      chatLog.scrollTop = chatLog.scrollHeight;

      const aiText = await getHuggingFaceResponse(userInput);
      loadingEntry.textContent = `VerdeAI: ${aiText}`;
      chatLog.scrollTop = chatLog.scrollHeight;
    });
  </script>
</body>
</html>
